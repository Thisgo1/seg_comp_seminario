{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/projetos/in8-teste/frontend/src/services/api.ts"],"sourcesContent":["import {\r\n\tCreateOrderDto,\r\n\tLoginDto,\r\n\tNewAddressDto,\r\n\tProviderType,\r\n\tRegisterDto,\r\n\tUpdateAddressDto,\r\n\tUpdateOrderStatusDto,\r\n\tUpdateUserDto,\r\n\tCreateRatingDto,\r\n} from \"@/types/types\";\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3333\";\r\n\r\n// Helper para requisições autenticadas\r\nconst authFetch = async (\r\n\turl: string,\r\n\toptions: RequestInit = {},\r\n\ttoken?: string\r\n) => {\r\n\tconst headers = {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\t...(token && { Authorization: `Bearer ${token}` }),\r\n\t\t...options.headers,\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst res = await fetch(`${API_BASE_URL}${url}`, {\r\n\t\t\t...options,\r\n\t\t\theaders,\r\n\t\t\tcredentials: \"include\",\r\n\t\t});\r\n\r\n\t\tif (!res.ok) {\r\n\t\t\tconst errorData = await res.json().catch(() => ({}));\r\n\t\t\tthrow new Error(errorData.message || \"Erro na requisição\");\r\n\t\t}\r\n\r\n\t\treturn await res.json();\r\n\t} catch (error) {\r\n\t\tconsole.error(`Erro na requisição para ${url}:`, error);\r\n\t\tthrow error;\r\n\t}\r\n};\r\n\r\nexport const api = {\r\n\t// Autenticação\r\n\tauth: {\r\n\t\tsignup: async (userData: RegisterDto) =>\r\n\t\t\tauthFetch(\"/auth/signup\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: JSON.stringify(userData),\r\n\t\t\t}),\r\n\r\n\t\tsignin: async (credentials: LoginDto) =>\r\n\t\t\tauthFetch(\"/auth/signin\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: JSON.stringify(credentials),\r\n\t\t\t}),\r\n\r\n\t\tlogout: async () => authFetch(\"/auth/logout\", { method: \"POST\" }),\r\n\t},\r\n\r\n\t// Usuário\r\n\tuser: {\r\n\t\tgetMe: async (token: string) =>\r\n\t\t\tauthFetch(\"/users/me\", { method: \"GET\" }, token),\r\n\r\n\t\tupdate: async (dto: UpdateUserDto, token: string) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t\"/users\",\r\n\t\t\t\t{ method: \"PATCH\", body: JSON.stringify(dto) },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\tdelete: async (token: string) =>\r\n\t\t\tauthFetch(\"/users\", { method: \"DELETE\" }, token),\r\n\t},\r\n\r\n\t// Endereços\r\n\taddresses: {\r\n\t\tgetAll: async (token: string) =>\r\n\t\t\tauthFetch(\"/addresses\", { method: \"GET\" }, token),\r\n\r\n\t\tgetById: async (addressId: number, token: string) =>\r\n\t\t\tauthFetch(`/addresses/${addressId}`, { method: \"GET\" }, token),\r\n\r\n\t\tcreate: async (dto: NewAddressDto, token: string) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t\"/addresses\",\r\n\t\t\t\t{ method: \"POST\", body: JSON.stringify(dto) },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\tupdate: async (addressId: number, dto: UpdateAddressDto, token: string) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t`/addresses/${addressId}`,\r\n\t\t\t\t{ method: \"PUT\", body: JSON.stringify(dto) },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\tdelete: async (addressId: number, token: string) =>\r\n\t\t\tauthFetch(`/addresses/${addressId}`, { method: \"DELETE\" }, token),\r\n\t},\r\n\r\n\t// Pedidos\r\n\torders: {\r\n\t\tcreate: async (dto: CreateOrderDto, token: string) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t\"/orders\",\r\n\t\t\t\t{ method: \"POST\", body: JSON.stringify(dto) },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\tgetAll: async (token: string) =>\r\n\t\t\tauthFetch(\"/orders\", { method: \"GET\" }, token),\r\n\r\n\t\tgetById: async (orderId: number, token: string) =>\r\n\t\t\tauthFetch(`/orders/${orderId}`, { method: \"GET\" }, token),\r\n\r\n\t\tupdateStatus: async (\r\n\t\t\torderId: number,\r\n\t\t\tdto: UpdateOrderStatusDto,\r\n\t\t\ttoken: string\r\n\t\t) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t`/orders/${orderId}/status`,\r\n\t\t\t\t{ method: \"PUT\", body: JSON.stringify(dto) },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\tcancel: async (orderId: number, token: string) =>\r\n\t\t\tauthFetch(`/orders/${orderId}/cancel`, { method: \"PUT\" }, token),\r\n\t},\r\n\r\n\t// Produtos\r\n\tproducts: {\r\n\t\tgetAll: async (page = 1, limit = 10, token: string) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t`/products?page=${page}&limit=${limit}`,\r\n\t\t\t\t{ method: \"GET\" },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\tgetById: async (provider: ProviderType, id: string, token: string) =>\r\n\t\t\tauthFetch(`/products/${provider}/${id}`, { method: \"GET\" }, token),\r\n\r\n\t\tsearch: async (query: string, token: string) =>\r\n\t\t\tauthFetch(`/products/search?q=${query}`, { method: \"GET\" }, token),\r\n\r\n\t\tgetHistory: async (provider: ProviderType, id: string, token: string) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t`/products/${provider}/${id}/history`,\r\n\t\t\t\t{ method: \"GET\" },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\tcompare: async (orderItemId: number, token: string) =>\r\n\t\t\tauthFetch(`/products/compare/${orderItemId}`, { method: \"GET\" }, token),\r\n\t},\r\n\r\n\tratings: {\r\n\t\t/**\r\n\t\t * Avalia um produto\r\n\t\t * @param productId ID do produto na API externa\r\n\t\t * @param provider Tipo do provedor (BRASILIAN/EUROPEAN)\r\n\t\t * @param dto Dados da avaliação\r\n\t\t * @param token JWT token\r\n\t\t */\r\n\t\trateProduct: async (\r\n\t\t\tproductId: string,\r\n\t\t\tprovider: ProviderType,\r\n\t\t\tdto: CreateRatingDto,\r\n\t\t\ttoken: string\r\n\t\t) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t`/products/${provider}/${id}/rate`,\r\n\t\t\t\t{ method: \"POST\", body: JSON.stringify(dto) },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\t/**\r\n\t\t * Busca avaliações de um produto\r\n\t\t * @param productId ID do produto\r\n\t\t * @param provider Tipo do provedor\r\n\t\t * @param page Página atual (opcional)\r\n\t\t * @param limit Itens por página (opcional)\r\n\t\t * @param token JWT token (opcional para rotas públicas)\r\n\t\t */\r\n\t\tgetProductRatings: async (\r\n\t\t\tproductId: string,\r\n\t\t\tprovider: ProviderType,\r\n\t\t\tpage: number = 1,\r\n\t\t\tlimit: number = 10,\r\n\t\t\ttoken?: string\r\n\t\t) =>\r\n\t\t\tauthFetch(\r\n\t\t\t\t`/products/${provider}/${id}/ratings?page=${page}&limit=${limit}`,\r\n\t\t\t\t{ method: \"GET\" },\r\n\t\t\t\ttoken\r\n\t\t\t),\r\n\r\n\t\t/**\r\n\t\t * Deleta uma avaliação do usuário\r\n\t\t * @param ratingId ID da avaliação\r\n\t\t * @param token JWT token\r\n\t\t */\r\n\t\tdeleteRating: async (ratingId: number, token: string) =>\r\n\t\t\tauthFetch(`/ratings/${ratingId}`, { method: \"DELETE\" }, token),\r\n\t},\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///C:/projetos/in8-teste/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///C:/projetos/in8-teste/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///C:/projetos/in8-teste/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///C:/projetos/in8-teste/frontend/src/app/prod/page.tsx"],"sourcesContent":["// src/app/products/page.tsx\r\n\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { api } from \"@/services/api\";\r\nimport { ProductCard } from \"@/components/products/ProductCard\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Product } from \"@/types/types\";\r\n\r\n// Mock data para quando não houver produtos\r\nconst MOCK_PRODUCTS: Product[] = [\r\n\t{\r\n\t\tid: \"mock-1\",\r\n\t\tname: \"Produto Exemplo 1\",\r\n\t\tprice: 89.9,\r\n\t\tdescription: \"Descrição do produto exemplo 1\",\r\n\t\tprovider: \"BRASILIAN\",\r\n\t\taverageRating: 4.5,\r\n\t\tratingCount: 10,\r\n\t\timageUrl: \"/placeholder-product.jpg\",\r\n\t\tcategory: \"eletronicos\",\r\n\t},\r\n\t{\r\n\t\tid: \"mock-2\",\r\n\t\tname: \"Produto Exemplo 2\",\r\n\t\tprice: 120.0,\r\n\t\tdescription: \"Descrição do produto exemplo 2\",\r\n\t\tprovider: \"EUROPEAN\",\r\n\t\taverageRating: 4.2,\r\n\t\tratingCount: 8,\r\n\t\timageUrl: \"/placeholder-product.jpg\",\r\n\t\tcategory: \"moda\",\r\n\t},\r\n\t{\r\n\t\tid: \"mock-3\",\r\n\t\tname: \"Produto Exemplo 3\",\r\n\t\tprice: 75.5,\r\n\t\tdescription: \"Descrição do produto exemplo 3\",\r\n\t\tprovider: \"BRASILIAN\",\r\n\t\taverageRating: 4.0,\r\n\t\tratingCount: 15,\r\n\t\timageUrl: \"/placeholder-product.jpg\",\r\n\t\tcategory: \"casa\",\r\n\t},\r\n\t{\r\n\t\tid: \"mock-4\",\r\n\t\tname: \"Produto Exemplo 4\",\r\n\t\tprice: 199.9,\r\n\t\tdescription: \"Descrição do produto exemplo 4\",\r\n\t\tprovider: \"EUROPEAN\",\r\n\t\taverageRating: 4.7,\r\n\t\tratingCount: 20,\r\n\t\timageUrl: \"/placeholder-product.jpg\",\r\n\t\tcategory: \"eletronicos\",\r\n\t},\r\n];\r\n\r\nexport default function ProductsPage() {\r\n\tconst [products, setProducts] = useState<Product[]>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\r\n\tconst [showMock, setShowMock] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchProducts = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst data = await api.products.getAll(1, 20, \"user-token\");\r\n\r\n\t\t\t\t// Se houver produtos, usa os dados da API\r\n\t\t\t\tif (data.items && data.items.length > 0) {\r\n\t\t\t\t\tsetProducts(data.items);\r\n\t\t\t\t\tsetShowMock(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Se não houver produtos, usa o mock\r\n\t\t\t\t\tsetProducts(MOCK_PRODUCTS);\r\n\t\t\t\t\tsetShowMock(true);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Erro ao buscar produtos:\", error);\r\n\t\t\t\t// Em caso de erro, usa os produtos mockados\r\n\t\t\t\tsetProducts(MOCK_PRODUCTS);\r\n\t\t\t\tsetShowMock(true);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchProducts();\r\n\t}, []);\r\n\r\n\tconst handleSearch = async () => {\r\n\t\tif (searchQuery.trim() === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst data = await api.products.search(searchQuery, \"user-token\");\r\n\t\t\tsetProducts(data);\r\n\t\t\tsetShowMock(data.length === 0);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Erro na busca:\", error);\r\n\t\t\tsetProducts(MOCK_PRODUCTS);\r\n\t\t\tsetShowMock(true);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container mx-auto px-4 py-8\">\r\n\t\t\t<h1 className=\"text-3xl font-bold mb-6\">Produtos</h1>\r\n\r\n\t\t\t{/* Barra de busca */}\r\n\t\t\t<div className=\"flex gap-2 mb-6\">\r\n\t\t\t\t<Input\r\n\t\t\t\t\tplaceholder=\"Buscar produtos...\"\r\n\t\t\t\t\tvalue={searchQuery}\r\n\t\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\r\n\t\t\t\t\tonKeyDown={(e) => e.key === \"Enter\" && handleSearch()}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button onClick={handleSearch}>Buscar</Button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Lista de produtos */}\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n\t\t\t\t\t{Array.from({ length: 8 }).map((_, index) => (\r\n\t\t\t\t\t\t<Skeleton key={index} className=\"h-80 rounded-xl\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{showMock && (\r\n\t\t\t\t\t\t<div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6\">\r\n\t\t\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t\t\t<div className=\"ml-3\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-sm text-yellow-700\">\r\n\t\t\t\t\t\t\t\t\t\tEstamos exibindo produtos de exemplo. Nenhum produto real\r\n\t\t\t\t\t\t\t\t\t\tfoi encontrado.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{products.length === 0 ? (\r\n\t\t\t\t\t\t<div className=\"text-center py-12\">\r\n\t\t\t\t\t\t\t<p className=\"text-lg text-gray-600\">\r\n\t\t\t\t\t\t\t\tNenhum produto encontrado.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName=\"mt-4\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetProducts(MOCK_PRODUCTS);\r\n\t\t\t\t\t\t\t\t\tsetShowMock(true);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tVer produtos de exemplo\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n\t\t\t\t\t\t\t{products.map((product) => (\r\n\t\t\t\t\t\t\t\t<ProductCard\r\n\t\t\t\t\t\t\t\t\tkey={product.id}\r\n\t\t\t\t\t\t\t\t\tproduct={product}\r\n\t\t\t\t\t\t\t\t\tisMock={showMock && product.id.startsWith(\"mock-\")}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}